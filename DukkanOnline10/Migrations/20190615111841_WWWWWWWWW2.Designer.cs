// <auto-generated />
using System;
using DukkanOnline10.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DukkanOnline10.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20190615111841_WWWWWWWWW2")]
    partial class WWWWWWWWW2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("DukkanOnline10.Models.Dukkan", b =>
                {
                    b.Property<int>("DukkanId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DukkanAdi");

                    b.Property<string>("Location")
                        .HasMaxLength(50);

                    b.HasKey("DukkanId");

                    b.ToTable("Dukkan");
                });

            modelBuilder.Entity("DukkanOnline10.Models.Envanter", b =>
                {
                    b.Property<int>("EnvanterID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("SaticiID");

                    b.Property<int>("UrunID");

                    b.HasKey("EnvanterID");

                    b.HasIndex("SaticiID");

                    b.HasIndex("UrunID");

                    b.ToTable("Envanter");
                });

            modelBuilder.Entity("DukkanOnline10.Models.Kategori", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("KategoriAdi");

                    b.HasKey("KategoriID");

                    b.ToTable("Kategori");
                });

            modelBuilder.Entity("DukkanOnline10.Models.Sepet", b =>
                {
                    b.Property<int>("EnvanterID");

                    b.Property<int>("SiparisID");

                    b.HasKey("EnvanterID", "SiparisID");

                    b.HasIndex("SiparisID");

                    b.ToTable("Sepet");
                });

            modelBuilder.Entity("DukkanOnline10.Models.Siparis", b =>
                {
                    b.Property<int>("SiparisID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MusteriID");

                    b.HasKey("SiparisID");

                    b.HasIndex("MusteriID");

                    b.ToTable("Siparis");
                });

            modelBuilder.Entity("DukkanOnline10.Models.Urun", b =>
                {
                    b.Property<int>("UrunID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("KategoriID");

                    b.Property<int>("Stok");

                    b.Property<string>("UrunAdi");

                    b.Property<decimal>("UrunFiyati");

                    b.HasKey("UrunID");

                    b.HasIndex("KategoriID");

                    b.ToTable("Urun");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("DukkanOnline10.Models.Musteri", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.ToTable("Musteri");

                    b.HasDiscriminator().HasValue("Musteri");
                });

            modelBuilder.Entity("DukkanOnline10.Models.Satici", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<int?>("DukkanId");

                    b.HasIndex("DukkanId")
                        .IsUnique();

                    b.ToTable("Satici");

                    b.HasDiscriminator().HasValue("Satici");
                });

            modelBuilder.Entity("DukkanOnline10.Models.Envanter", b =>
                {
                    b.HasOne("DukkanOnline10.Models.Satici", "UrunSaticisi")
                        .WithMany("UrunEnvanteri")
                        .HasForeignKey("SaticiID");

                    b.HasOne("DukkanOnline10.Models.Urun", "SaticiUrunu")
                        .WithMany("SaticiEnvanteri")
                        .HasForeignKey("UrunID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline10.Models.Sepet", b =>
                {
                    b.HasOne("DukkanOnline10.Models.Envanter", "Envanter")
                        .WithMany("Sepetler")
                        .HasForeignKey("EnvanterID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DukkanOnline10.Models.Siparis", "Siparis")
                        .WithMany("Sepetler")
                        .HasForeignKey("SiparisID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline10.Models.Siparis", b =>
                {
                    b.HasOne("DukkanOnline10.Models.Musteri", "Musteri")
                        .WithMany("Siparisleri")
                        .HasForeignKey("MusteriID");
                });

            modelBuilder.Entity("DukkanOnline10.Models.Urun", b =>
                {
                    b.HasOne("DukkanOnline10.Models.Kategori", "Kategorisi")
                        .WithMany("KategoriUrunleri")
                        .HasForeignKey("KategoriID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DukkanOnline10.Models.Satici", b =>
                {
                    b.HasOne("DukkanOnline10.Models.Dukkan", "Dukkani")
                        .WithOne("DukkanSahibi")
                        .HasForeignKey("DukkanOnline10.Models.Satici", "DukkanId");
                });
#pragma warning restore 612, 618
        }
    }
}
